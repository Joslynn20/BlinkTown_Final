package web.mvc.controller;

import org.springframework.security.core.context.SecurityContextHolder;


public class OrdersController {
	
	//유저 정보 받아오기 : Users users=(Users)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
	
	/**
	 * 1) 일반회원 바로 주문하기-폼연결 (권한설정 주의)
	 * 액터 : 일반회원
 	 * mapping : 일반회원/구매/주문폼
	 * return : forward : 주문폼으로 연결
	 * 조건 : -
	 */
	
	/**
	 * 2) 멤버쉽회원 바로 주문하기-폼연결 (권한설정 주의)
	 * 액터 : 멤버쉽회원
 	 * mapping : 멤버쉽회원/구매 / 주문폼
	 * return : forward : 주문폼으로 연결
	 * 조건 : -
	 */
	
	///////////////////////////////////////////////////////
	
	/**
	 * 3-1) 유저 마이페이지 - 최근순 10개정도 주문 내역 조회
	 * 권한 : 일반,멤버쉽 회원
	 * mapping : 일반,멤버쉽/마이페이지 / 메인
	 * return : Page or List 주문정보
	 * 조건 : inCase==2
	 */
	
	/**
	 * 3-2xx) 유저 마이페이지 - 기간 조건별 최근순 주문내역 조회 (일단 구현x 회의후 넣기)
	 * 권한 : 일반,멤버쉽 회원
	 * mapping : 일반,멤버쉽/마이페이지 / 주문시간조회 페이지
	 * return : Page 주문내역-기간별?
	 * 조건 : inCase==3 / 인수로 날짜(20221130 형식) 받기
	 */

	/**
	 * 3-3) 유저 마이페이지 - 주문 내역 클릭시 해당 주문 코드로 주문 내역 조회
	 * : 주문 상세+상품 정보
	 * 권한 : 일반,멤버쉽
	 * mapping : 일반,멤버쉽/마이페이지/상세내역 조회 페이지
	 * return : Page 주문상세정보
	 * 조건 : 인수로 주문번호 or 주문객체 받기
	 */
	////////////////////////////////////////////////////
	
	/**
	 * 4-1) 관리자 페이지 - 주문정보 조회 페이지
	 * : 주문 정보
	 * 권한 : 일반,멤버쉽
	 * mapping : 관리자/주문조회페이지/메인 (주문 전체조회 페이지)
	 * return : Page 주문정보
	 * 조건 : inCase==1
	 */
	
	/**
	 * 4-2) 관리자 페이지 - 주문 내역 클릭시 해당 주문 코드로 주문 내역 조회
	 * : 주문 상세+상품 정보
	 * 권한 : 일반,멤버쉽
	 * mapping : 관리자/주문조회페이지/상세내역 조회 페이지
	 * return : Page 주문상세정보
	 * 조건 : 인수로 주문번호 or 주문객체 받기
	 */
	
	/**
	 * 배송지 주소 API사용 자바스크립트로 할 지 확인 후 작성, 우선 메모만
	 * ->뷰에서 폼으로 작성
	 */
	
	//////////////////////////////////////////////////
	/**
	 * 5) 주문 폼 이동
	 * -> 주문폼에서 다음카카오 주소지API사용, 스크립트만 하면 될지 확인해보고 완성할 것
	 * (메소드는 폼으로 연결)
	 */
	
	/**
	 * 6) 주문-결제 : 아임포트 API 사용할 예정(통합 결제대행API),
	 * view부분과의 연동 필요하여 확인후 넣을 예정
	 *  
	 *  아래는 정리후 수정할 예정 (서비스 파트와 부정확한 내용 섞여있음)
	 *  
	 *  
	 *  
	 * 조회하여 주문이 넘어왔을때 진행
1) 주문폼 값 전달받기 -> 이때 배송지 값 입력하는 API 사용 (폼 양식에서 사용)
2) 트랜젝션 시작
3) 전달받은 주문 정보로 주문테이블, 주문상세 테이블 C
4-1) 상품 U : if 재고량이 1이상일때 : 재고량 감소 / 재고량-상품수량<0 이면 실패
4-2) 멤버쉽카드일시 :  위 재고량 로직+ 권한생성 + 회원 멤버쉽 1로 update
5) 결제API사용 : 주문코드 전달하여 결제요청
6) 결제 정보 전달받기 : 결제코드
7) 결제정보 테이블에 결제정보 저장
8) 결제성공처리 (결제서비스쪽에 성공값 보내야하나? 보낸다면 보낸 이후 성공처리)
9) 결제 성공 후 장바구니 삭제(세션 삭제) 혹은 세션의 해당 상품 삭제
10) 주문완료 페이지로 이동 (주문 내역 출력되는 페이지 예상)
	 * 
	 */
	
	
	/////////////////////////////////////////
	//확장
	/**
	 * 결제 취소->주문시 결제 테이블 추가후 결제코드(tid)받아서 저장해야 함
	 */

	/**
	 * 주문 상태 변경(관리자 접근권한)
	 * 1) 주문 상태별 조회
	 * 2) 결제 완료 상태에서 배송중 으로 상태 변경
	 */
	
	////////////////////////////////////////////
	//확장2
	/**
	 * 배송 조회 : 운송장 정보 DB테이블 필요 (택배사 API이용)
	 */
	/**
	 * 결제 수단 추가 : paypal, 부트페이, 네이버페이 등등
	 */
}
